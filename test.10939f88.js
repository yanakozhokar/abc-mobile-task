const e=document.querySelector("[data-menu]"),s=document.querySelector(".modal__nav-menu-list"),t=document.querySelector("[data-menu-open]"),c=document.querySelector("[data-menu-close]");function n(){e.classList.toggle("is-hidden"),e.classList.contains("is-hidden")?document.querySelector("body").style.overflow="visible":document.querySelector("body").style.overflow="hidden"}t.addEventListener("click",n),c.addEventListener("click",n),s.addEventListener("click",(function(e){"A"===e.target.nodeName&&n()}));const r=document.querySelector(".quiz"),a=document.querySelector(".quiz__form"),l=document.querySelector(".quiz__list").children,i=document.querySelector(".btn-form"),o=document.querySelector(".quiz__indicator"),d=document.querySelector(".quiz__indicator-fill"),u=document.querySelector(".results"),p=document.querySelector(".loading"),h=[],_=o.clientWidth-o.clientWidth/l.length;d.style.width=`${Math.round(_/l.length)}px`,a.addEventListener("change",(()=>{a.querySelector(".quiz__item--visible").querySelectorAll('input[type="radio"]:checked').length>0&&i.removeAttribute("disabled")})),i.addEventListener("click",(()=>{const e=a.querySelector(".quiz__item--visible"),s=Array.from(l).indexOf(e);e.classList.remove("quiz__item--visible"),e.classList.add("quiz__item--hidden");const t=l[s+1];if(d.style.width=`${Math.round((s+2)*_/l.length)}px`,t)t.classList.remove("quiz__item--hidden"),t.classList.add("quiz__item--visible"),i.setAttribute("disabled","disabled");else{r.classList.add("is-hidden"),p.classList.remove("is-hidden"),setTimeout((()=>{p.classList.add("is-hidden"),u.classList.remove("is-hidden")}),3e3);document.querySelectorAll('input[type="radio"]:checked').forEach((e=>{const{name:s,value:t}=e;h.push({[s]:t})}))}}));const m=document.querySelector(".results__call-btn"),q=document.querySelector(".results__timer");m.addEventListener("click",(function(){fetch("https://swapi.dev/api/people/1/").then((e=>e.json())).then((e=>{!function(e){const{name:s,height:t,mass:c,hair_color:n,skin_color:r,eye_color:a,birth_year:l,gender:i,homeworld:o,films:d,species:u,vehicles:p,starships:h,created:_,edited:q,url:v}=e,y=`<div class="results__request">\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Name: </span>${s}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Height: </span>${t}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Mass: </span>${c}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Hair color: </span>${n}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Skin color: </span>${r}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Eye color: </span>${a}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Birth year: </span>${l}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Gender: </span>${i}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Homeworld: </span>${o}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Films: </span>${d.map((e=>e)).join(" ")}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Species: </span>${u.map((e=>e)).join(" ")}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Vehicles: </span>${p.map((e=>e)).join(" ")}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Starships: </span>${h.map((e=>e)).join(" ")}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Created: </span>${_}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Edited: </span>${q}\n      </p>\n      <p class="results__request-characteristic">\n        <span class="bold-lowercase">Url: </span>${v}\n      </p>\n    </div>`;m.insertAdjacentHTML("afterend",y)}(e)}))}));(new class{start({hours:e,minutes:s,seconds:t}){const c=Date.now(),n=36e5*e+6e4*s+1e3*t;this.intervalID=setInterval((()=>{const e=Date.now()-c,s=this.convertTime(n-e);this.showTimer(s),0!==s.hours||0!==s.minutes||0!==s.seconds||clearInterval(this.intervalID)}),1e3)}stop(){clearInterval(this.intervalID)}convertTime(e){const s=Math.floor(e/1e3/3600),t=Math.floor((e-36e5*s)/1e3/60);return{hours:s,minutes:t,seconds:Math.floor((e-36e5*s-6e4*t)/1e3)}}showTimer({hours:e,minutes:s,seconds:t}){e<10&&(e=`0${e}`),s<10&&(s=`0${s}`),t<10&&(t=`0${t}`),q.textContent=`${s}:${t}`}constructor(){this.intervalID=null}}).start({hours:0,minutes:10,seconds:0});
//# sourceMappingURL=test.10939f88.js.map
